/**
 * Set up Ktlint to perform extensive code analysis.
 *
 * Gradle tasks added:
 * - ktlint
 * - ktlintFormat
 *
 * Some tasks above are added as dependencies of the check task so running check will
 * run all of them.
 */

repositories {
//    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint(libs.ktlint) {
        attributes {
            attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
        }
    }
}

def qualityConfigDir = "$project.rootDir/config/quality"
def reportsDir = "$project.buildDir/reports"

//NEW TASKS

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    mainClass = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // print style violations as usual + create report in checkstyle format
    args "--reporter=html,output=${reportsDir}/ktlint.html"
    args "--editorconfig=${qualityConfigDir}/ktlint/.editorconfig"
}


task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    mainClass = "com.pinterest.ktlint.Main"
    jvmArgs "--add-opens=java.base/java.lang=ALL-UNNAMED"
    args "-F", "src/**/*.kt"
    args "--editorconfig=${qualityConfigDir}/ktlint/.editorconfig"
}

//check.dependsOn 'checkstyle', 'findbugs', 'pmd'
check.dependsOn ktlint