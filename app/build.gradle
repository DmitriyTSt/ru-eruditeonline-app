plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

apply from: '../config/quality/quality.gradle'

android {
    namespace = "ru.eruditeonline.app"
    compileSdk 33

    defaultConfig {
        applicationId "ru.eruditeonline.app"
        multiDexEnabled true
        minSdk 21
        targetSdk 33
        versionCode this.getVersionCode()
        versionName "1.0.0"

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //для подписки релизного билда
    File releaseSignFile = rootProject.file('release_keystore.properties')
    Properties releaseSignProperties
    if (releaseSignFile.exists()) {
        releaseSignProperties = new Properties()
        releaseSignProperties.load(new FileInputStream(releaseSignFile))
    } else {
        // fake keystore properties file
        releaseSignProperties = new Properties()
    }

    signingConfigs {
        release {
            storeFile file('keystore/' + releaseSignProperties['keystore'])
            storePassword releaseSignProperties['storePassword']
            keyAlias releaseSignProperties['keyAlias']
            keyPassword releaseSignProperties['keyPassword']
        }
        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'AndroidDebugKey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        // release build for google play, master/release branches
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        // debug build for developers only
        debug {
            applicationIdSuffix ".develop"
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
        }

        // internal build for testers
        internal {
            initWith release
            applicationIdSuffix ".develop"
            signingConfig signingConfigs.debug
            debuggable false
        }
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    kotlin {
        jvmToolchain(17)
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def appName = 'eruditeonline'
            def buildType = variant.buildType.name
            def newName = "${appName}-${defaultConfig.versionName}_${defaultConfig.versionCode}_${buildType}"
            outputFileName = newName.toLowerCase() + ".apk"
        }
    }

    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}

def getVersionCode() {
    try {
        def versionCode = "git rev-list --count HEAD".execute([], project.rootProject.projectDir).text.trim()
        def result = Integer.parseInt(versionCode)
        return result
    }
    catch (ignored) {
        println "Error getting version code " + ignored.getLocalizedMessage()
        return -1
    }
}

dependencies {
    coreLibraryDesugaring(libs.code.desugaring)

    implementation("androidx.activity:activity-compose:1.7.0")
    implementation(platform("androidx.compose:compose-bom:2023.06.01"))
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-graphics")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.material3:material3")
    implementation(libs.androidx.navigation.compose)
    implementation("androidx.lifecycle:lifecycle-runtime-compose:2.6.2")
    implementation("androidx.compose.runtime:runtime-livedata:1.5.4")
    debugImplementation("androidx.compose.ui:ui-tooling")
    debugImplementation("androidx.compose.ui:ui-test-manifest")

    implementation("io.coil-kt:coil-compose:2.4.0")

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.material)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.fragment.ktx)
    implementation(libs.androidx.viewpager2)
    implementation(libs.flexbox)
    implementation(libs.androidx.paging)
    implementation(libs.androidx.swiperefreshlayout)
    implementation(libs.androidx.splashscreen)

    implementation(libs.glide.core)
    implementation(libs.glide.compiler)

    implementation(libs.viewbinding.delegate)

    implementation(libs.coroutines.core)
    implementation(libs.coroutines.android)
    implementation(libs.androidx.livedata)
    implementation(libs.androidx.lifecycle.process)

    implementation(libs.bundles.retrofit)
    implementation(libs.gson)

    implementation(libs.androidx.navigation.fragment)
    implementation(libs.androidx.navigation.ui)

    implementation(libs.bundles.dagger.core)
    kapt(libs.bundles.dagger.kapt)

    implementation(libs.timber)
    implementation(libs.chucker)

    implementation(libs.androidx.browser)
    implementation(libs.androidx.security.crypto)

    implementation platform(libs.firebase.bom)
    implementation(libs.firebase.analytics)
    implementation(libs.firebase.crashlytics.asProvider())
}