plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

apply from: '../config/quality/quality.gradle'
apply from: '../dependencies.gradle'

android {
    compileSdk 33

    defaultConfig {
        applicationId "ru.eruditeonline.app"
        multiDexEnabled true
        minSdk 21
        targetSdk 33
        versionCode this.getVersionCode()
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //для подписки релизного билда
    File releaseSignFile = rootProject.file('release_keystore.properties')
    Properties releaseSignProperties
    if (releaseSignFile.exists()) {
        releaseSignProperties = new Properties()
        releaseSignProperties.load(new FileInputStream(releaseSignFile))
    } else {
        // fake keystore properties file
        releaseSignProperties = new Properties()
    }

    signingConfigs {
        release {
            storeFile file('keystore/' + releaseSignProperties['keystore'])
            storePassword releaseSignProperties['storePassword']
            keyAlias releaseSignProperties['keyAlias']
            keyPassword releaseSignProperties['keyPassword']
        }
        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'AndroidDebugKey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        // release build for google play, master/release branches
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        // debug build for developers only
        debug {
            applicationIdSuffix ".develop"
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
        }

        // internal build for testers
        internal {
            initWith release
            applicationIdSuffix ".develop"
            signingConfig signingConfigs.debug
            debuggable true
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def appName = 'eruditeonline'
            def buildType = variant.buildType.name
            def newName = "${appName}-${defaultConfig.versionName}_${defaultConfig.versionCode}_${buildType}"
            outputFileName = newName.toLowerCase() + ".apk"
        }
    }
}

def getVersionCode() {
    try {
        def versionCode = "git rev-list --count HEAD".execute([], project.rootProject.projectDir).text.trim()
        def result = Integer.parseInt(versionCode)
        return result
    }
    catch (ignored) {
        println "Error getting version code " + ignored.getLocalizedMessage()
        return -1
    }
}

dependencies {
    coreLibraryDesugaring code_desugaring

    implementation core_ktx
    implementation appcompat
    implementation material
    implementation constraintlayout
    implementation fragment_ktx
    implementation multidex
    implementation view_pager_2
    implementation flexbox
    implementation paging
    implementation swiperefreshlayout
    implementation splashscreen

    implementation glide
    implementation glide_compiler

    implementation viewbinding_delegate

    implementation coroutines_core
    implementation coroutines_android
    implementation livedata_ktx
    implementation lifecycle_process

    implementation retrofit
    implementation gson
    implementation gson_converter

    implementation navigation_fragment
    implementation navigation_ui

    implementation dagger
    implementation dagger_android
    implementation dagger_android_support
    kapt dagger_android_processor
    kapt dagger_compiler

    implementation timber
    implementation chucker

    implementation chrometabs
    implementation security_crypto

    implementation platform(firebase_bom)
    implementation firebase_analytics
    implementation firebase_crashlytics
}